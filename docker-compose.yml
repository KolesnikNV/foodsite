version: '3.8'

services:
  db:
    # container_name: "db"
    image: postgres:15.0-alpine
    restart: always
    volumes:
      - pg_data:/var/lib/postgres/data
    environment:
          - POSTGRES_USER=postgres
          - POSTGRES_PASSWORD=postgres
          - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    networks:
      - foodgram_network

  backend:
    # container_name: "backend"
    image: nkoles/foodgram_backend
    build:
      context: ./backend/
      dockerfile: Dockerfile
    restart: always
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    depends_on:
      - db
    networks:
      - foodgram_network

  frontend:
    # container_name: "frontend"
    image: nkoles/foodgram_frontend
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    volumes:
      - ../frontend/:/app/result_build/
    depends_on:
      - backend
    networks:
      - foodgram_network

  nginx:
    # container_name: "nginx"
    image: nginx:1.19.3
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static_value:/var/html/static
      - media_value:/var/html/media
      - ./infra/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/build:/usr/share/nginx/html/
      - ./docs/:/usr/share/nginx/html/api/docs/
    restart: always
    depends_on:
      - frontend
    networks:
      - foodgram_network

networks:
  foodgram_network:
    driver: bridge

volumes:
  static_value:
  media_value:
  pg_data:
