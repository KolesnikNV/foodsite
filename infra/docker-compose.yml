version: '3.8'

services:
  db:
    container_name: "db"
    image: postgres:15.0-alpine
    restart: always
    volumes:
      - pg_data:/var/lib/postgres/data
    env_file:
      - ./.env
    ports:
      - "5432:5432"
    networks:
      - foodgram_network

  backend:
    container_name: "backend"
    image: nkoles/foodgram_backend
    restart: always
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    depends_on:
      - db
    networks:
      - foodgram_network
    command: python manage.py runserver 0.0.0.0:8000 

  frontend:
    container_name: "frontend"
    image: nkoles/foodgram_frontend
    restart: always
    volumes:
      - ../frontend/:/app/result_build/
    networks:
      - foodgram_network
    

  nginx:
    container_name: "nginx"
    image: nginx:1.21.3-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - static_value:/var/html/static/
      - media_value:/var/html/media/

    depends_on:
      - backend
    restart: always
    networks:
      - foodgram_network

networks:
  foodgram_network:
    driver: bridge

volumes:
  static_value:
  media_value:
  pg_data:
